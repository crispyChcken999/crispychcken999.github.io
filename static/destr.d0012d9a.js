const t=/"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,r=/"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,u=/^\s*["[{]|^\s*-?\d[\d.]{0,14}\s*$/;function n(t,r){if(!("__proto__"===t||"constructor"===t&&r&&"object"==typeof r&&"prototype"in r))return r}function e(e,f={}){if("string"!=typeof e)return e;const i=e.toLowerCase().trim();if("true"===i)return!0;if("false"===i)return!1;if("null"===i)return null;if("nan"===i)return Number.NaN;if("infinity"===i)return Number.POSITIVE_INFINITY;if("undefined"!==i){if(!u.test(e)){if(f.strict)throw new SyntaxError("Invalid JSON");return e}try{return t.test(e)||r.test(e)?JSON.parse(e,n):JSON.parse(e)}catch(o){if(f.strict)throw o;return e}}}export{e as d};
